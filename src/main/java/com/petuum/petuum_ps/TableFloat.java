/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.petuum.petuum_ps;

public class TableFloat {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected TableFloat(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TableFloat obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        petuumJNI.delete_TableFloat(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TableFloat() {
    this(petuumJNI.new_TableFloat__SWIG_0(), true);
  }

  public TableFloat(TableFloat table) {
    this(petuumJNI.new_TableFloat__SWIG_1(TableFloat.getCPtr(table), table), true);
  }

  public TableFloat assign(TableFloat table) {
    return new TableFloat(petuumJNI.TableFloat_assign(swigCPtr, this, TableFloat.getCPtr(table), table), false);
  }

  public void GetAsync(int row_id) {
    petuumJNI.TableFloat_GetAsync(swigCPtr, this, row_id);
  }

  public void WaitPendingAsyncGet() {
    petuumJNI.TableFloat_WaitPendingAsyncGet(swigCPtr, this);
  }

  public void ThreadGet(int row_id, ThreadRowAccessor row_accessor) {
    petuumJNI.TableFloat_ThreadGet(swigCPtr, this, row_id, ThreadRowAccessor.getCPtr(row_accessor), row_accessor);
  }

  public void ThreadInc(int row_id, int column_id, float update) {
    petuumJNI.TableFloat_ThreadInc(swigCPtr, this, row_id, column_id, update);
  }

  public void ThreadBatchInc(int row_id, UpdateBatchFloat update_batch) {
    petuumJNI.TableFloat_ThreadBatchInc(swigCPtr, this, row_id, UpdateBatchFloat.getCPtr(update_batch), update_batch);
  }

  public void Get(int row_id, RowAccessor row_accessor) {
    petuumJNI.TableFloat_Get(swigCPtr, this, row_id, RowAccessor.getCPtr(row_accessor), row_accessor);
  }

  public void Inc(int row_id, int column_id, float update) {
    petuumJNI.TableFloat_Inc(swigCPtr, this, row_id, column_id, update);
  }

  public void BatchInc(int row_id, UpdateBatchFloat update_batch) {
    petuumJNI.TableFloat_BatchInc(swigCPtr, this, row_id, UpdateBatchFloat.getCPtr(update_batch), update_batch);
  }

  public int get_row_type() {
    return petuumJNI.TableFloat_get_row_type(swigCPtr, this);
  }

}
